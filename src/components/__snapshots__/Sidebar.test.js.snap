// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar displays course names when user is a teacher 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sidebar
    classes={
      Object {
        "drawer": Object {
          "flexShrink": 0,
          "width": 200,
        },
        "drawerPaper": Object {
          "width": 180,
        },
        "icon": Object {
          "margin": 5,
        },
        "nested": Object {
          "marginBottom": "10px",
          "marginLeft": "10px",
        },
        "toolbar": 10,
      }
    }
    user={
      Object {
        "person": Object {
          "teacher": Object {
            "courses": Array [
              Object {
                "name": "Test Course 1",
              },
              Object {
                "name": "Test Course 2",
              },
            ],
            "name": "Test Teacher",
          },
        },
        "role": "teacher",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <div
          className={10}
        />,
        <MenuList
          component="div"
        >
          <div>
            <WithStyles(MenuItem)
              onClick={[Function]}
              selected={true}
            >
              <WithStyles(ListItemText)
                primary="Test Course 1"
              />
            </WithStyles(MenuItem)>
            <WithStyles(Button)
              className={
                Object {
                  "marginBottom": "10px",
                  "marginLeft": "10px",
                }
              }
              color="primary"
              onClick={[Function]}
            >
              <WithStyles(Icon)
                className={
                  Object {
                    "margin": 5,
                  }
                }
                color="primary"
              >
                add_circle
              </WithStyles(Icon)>
              Assignment
            </WithStyles(Button)>
            <WithStyles(Divider) />
          </div>
          <div>
            <WithStyles(MenuItem)
              onClick={[Function]}
              selected={true}
            >
              <WithStyles(ListItemText)
                primary="Test Course 2"
              />
            </WithStyles(MenuItem)>
            <WithStyles(Button)
              className={
                Object {
                  "marginBottom": "10px",
                  "marginLeft": "10px",
                }
              }
              color="primary"
              onClick={[Function]}
            >
              <WithStyles(Icon)
                className={
                  Object {
                    "margin": 5,
                  }
                }
                color="primary"
              >
                add_circle
              </WithStyles(Icon)>
              Assignment
            </WithStyles(Button)>
            <WithStyles(Divider) />
          </div>
        </MenuList>,
      ],
      "className": Object {
        "flexShrink": 0,
        "width": 200,
      },
      "classes": Object {
        "paper": Object {
          "width": 180,
        },
      },
      "id": "sidebar",
      "position": "fixed",
      "variant": "permanent",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": 10,
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div>
              <WithStyles(MenuItem)
                onClick={[Function]}
                selected={true}
              >
                <WithStyles(ListItemText)
                  primary="Test Course 1"
                />
              </WithStyles(MenuItem)>
              <WithStyles(Button)
                className={
                  Object {
                    "marginBottom": "10px",
                    "marginLeft": "10px",
                  }
                }
                color="primary"
                onClick={[Function]}
              >
                <WithStyles(Icon)
                  className={
                    Object {
                      "margin": 5,
                    }
                  }
                  color="primary"
                >
                  add_circle
                </WithStyles(Icon)>
                Assignment
              </WithStyles(Button)>
              <WithStyles(Divider) />
            </div>,
            <div>
              <WithStyles(MenuItem)
                onClick={[Function]}
                selected={true}
              >
                <WithStyles(ListItemText)
                  primary="Test Course 2"
                />
              </WithStyles(MenuItem)>
              <WithStyles(Button)
                className={
                  Object {
                    "marginBottom": "10px",
                    "marginLeft": "10px",
                  }
                }
                color="primary"
                onClick={[Function]}
              >
                <WithStyles(Icon)
                  className={
                    Object {
                      "margin": 5,
                    }
                  }
                  color="primary"
                >
                  add_circle
                </WithStyles(Icon)>
                Assignment
              </WithStyles(Button)>
              <WithStyles(Divider) />
            </div>,
          ],
          "component": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <WithStyles(MenuItem)
                  onClick={[Function]}
                  selected={true}
                >
                  <WithStyles(ListItemText)
                    primary="Test Course 1"
                  />
                </WithStyles(MenuItem)>,
                <WithStyles(Button)
                  className={
                    Object {
                      "marginBottom": "10px",
                      "marginLeft": "10px",
                    }
                  }
                  color="primary"
                  onClick={[Function]}
                >
                  <WithStyles(Icon)
                    className={
                      Object {
                        "margin": 5,
                      }
                    }
                    color="primary"
                  >
                    add_circle
                  </WithStyles(Icon)>
                  Assignment
                </WithStyles(Button)>,
                <WithStyles(Divider) />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(ListItemText)
                    primary="Test Course 1"
                  />,
                  "onClick": [Function],
                  "selected": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "primary": "Test Course 1",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(Icon)
                      className={
                        Object {
                          "margin": 5,
                        }
                      }
                      color="primary"
                    >
                      add_circle
                    </WithStyles(Icon)>,
                    "Assignment",
                  ],
                  "className": Object {
                    "marginBottom": "10px",
                    "marginLeft": "10px",
                  },
                  "color": "primary",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "add_circle",
                      "className": Object {
                        "margin": 5,
                      },
                      "color": "primary",
                    },
                    "ref": null,
                    "rendered": "add_circle",
                    "type": [Function],
                  },
                  "Assignment",
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <WithStyles(MenuItem)
                  onClick={[Function]}
                  selected={true}
                >
                  <WithStyles(ListItemText)
                    primary="Test Course 2"
                  />
                </WithStyles(MenuItem)>,
                <WithStyles(Button)
                  className={
                    Object {
                      "marginBottom": "10px",
                      "marginLeft": "10px",
                    }
                  }
                  color="primary"
                  onClick={[Function]}
                >
                  <WithStyles(Icon)
                    className={
                      Object {
                        "margin": 5,
                      }
                    }
                    color="primary"
                  >
                    add_circle
                  </WithStyles(Icon)>
                  Assignment
                </WithStyles(Button)>,
                <WithStyles(Divider) />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(ListItemText)
                    primary="Test Course 2"
                  />,
                  "onClick": [Function],
                  "selected": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "primary": "Test Course 2",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(Icon)
                      className={
                        Object {
                          "margin": 5,
                        }
                      }
                      color="primary"
                    >
                      add_circle
                    </WithStyles(Icon)>,
                    "Assignment",
                  ],
                  "className": Object {
                    "marginBottom": "10px",
                    "marginLeft": "10px",
                  },
                  "color": "primary",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "add_circle",
                      "className": Object {
                        "margin": 5,
                      },
                      "color": "primary",
                    },
                    "ref": null,
                    "rendered": "add_circle",
                    "type": [Function],
                  },
                  "Assignment",
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            className={10}
          />,
          <MenuList
            component="div"
          >
            <div>
              <WithStyles(MenuItem)
                onClick={[Function]}
                selected={true}
              >
                <WithStyles(ListItemText)
                  primary="Test Course 1"
                />
              </WithStyles(MenuItem)>
              <WithStyles(Button)
                className={
                  Object {
                    "marginBottom": "10px",
                    "marginLeft": "10px",
                  }
                }
                color="primary"
                onClick={[Function]}
              >
                <WithStyles(Icon)
                  className={
                    Object {
                      "margin": 5,
                    }
                  }
                  color="primary"
                >
                  add_circle
                </WithStyles(Icon)>
                Assignment
              </WithStyles(Button)>
              <WithStyles(Divider) />
            </div>
            <div>
              <WithStyles(MenuItem)
                onClick={[Function]}
                selected={true}
              >
                <WithStyles(ListItemText)
                  primary="Test Course 2"
                />
              </WithStyles(MenuItem)>
              <WithStyles(Button)
                className={
                  Object {
                    "marginBottom": "10px",
                    "marginLeft": "10px",
                  }
                }
                color="primary"
                onClick={[Function]}
              >
                <WithStyles(Icon)
                  className={
                    Object {
                      "margin": 5,
                    }
                  }
                  color="primary"
                >
                  add_circle
                </WithStyles(Icon)>
                Assignment
              </WithStyles(Button)>
              <WithStyles(Divider) />
            </div>
          </MenuList>,
        ],
        "className": Object {
          "flexShrink": 0,
          "width": 200,
        },
        "classes": Object {
          "paper": Object {
            "width": 180,
          },
        },
        "id": "sidebar",
        "position": "fixed",
        "variant": "permanent",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": 10,
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <div>
                <WithStyles(MenuItem)
                  onClick={[Function]}
                  selected={true}
                >
                  <WithStyles(ListItemText)
                    primary="Test Course 1"
                  />
                </WithStyles(MenuItem)>
                <WithStyles(Button)
                  className={
                    Object {
                      "marginBottom": "10px",
                      "marginLeft": "10px",
                    }
                  }
                  color="primary"
                  onClick={[Function]}
                >
                  <WithStyles(Icon)
                    className={
                      Object {
                        "margin": 5,
                      }
                    }
                    color="primary"
                  >
                    add_circle
                  </WithStyles(Icon)>
                  Assignment
                </WithStyles(Button)>
                <WithStyles(Divider) />
              </div>,
              <div>
                <WithStyles(MenuItem)
                  onClick={[Function]}
                  selected={true}
                >
                  <WithStyles(ListItemText)
                    primary="Test Course 2"
                  />
                </WithStyles(MenuItem)>
                <WithStyles(Button)
                  className={
                    Object {
                      "marginBottom": "10px",
                      "marginLeft": "10px",
                    }
                  }
                  color="primary"
                  onClick={[Function]}
                >
                  <WithStyles(Icon)
                    className={
                      Object {
                        "margin": 5,
                      }
                    }
                    color="primary"
                  >
                    add_circle
                  </WithStyles(Icon)>
                  Assignment
                </WithStyles(Button)>
                <WithStyles(Divider) />
              </div>,
            ],
            "component": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <WithStyles(MenuItem)
                    onClick={[Function]}
                    selected={true}
                  >
                    <WithStyles(ListItemText)
                      primary="Test Course 1"
                    />
                  </WithStyles(MenuItem)>,
                  <WithStyles(Button)
                    className={
                      Object {
                        "marginBottom": "10px",
                        "marginLeft": "10px",
                      }
                    }
                    color="primary"
                    onClick={[Function]}
                  >
                    <WithStyles(Icon)
                      className={
                        Object {
                          "margin": 5,
                        }
                      }
                      color="primary"
                    >
                      add_circle
                    </WithStyles(Icon)>
                    Assignment
                  </WithStyles(Button)>,
                  <WithStyles(Divider) />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(ListItemText)
                      primary="Test Course 1"
                    />,
                    "onClick": [Function],
                    "selected": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "primary": "Test Course 1",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(Icon)
                        className={
                          Object {
                            "margin": 5,
                          }
                        }
                        color="primary"
                      >
                        add_circle
                      </WithStyles(Icon)>,
                      "Assignment",
                    ],
                    "className": Object {
                      "marginBottom": "10px",
                      "marginLeft": "10px",
                    },
                    "color": "primary",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "add_circle",
                        "className": Object {
                          "margin": 5,
                        },
                        "color": "primary",
                      },
                      "ref": null,
                      "rendered": "add_circle",
                      "type": [Function],
                    },
                    "Assignment",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <WithStyles(MenuItem)
                    onClick={[Function]}
                    selected={true}
                  >
                    <WithStyles(ListItemText)
                      primary="Test Course 2"
                    />
                  </WithStyles(MenuItem)>,
                  <WithStyles(Button)
                    className={
                      Object {
                        "marginBottom": "10px",
                        "marginLeft": "10px",
                      }
                    }
                    color="primary"
                    onClick={[Function]}
                  >
                    <WithStyles(Icon)
                      className={
                        Object {
                          "margin": 5,
                        }
                      }
                      color="primary"
                    >
                      add_circle
                    </WithStyles(Icon)>
                    Assignment
                  </WithStyles(Button)>,
                  <WithStyles(Divider) />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(ListItemText)
                      primary="Test Course 2"
                    />,
                    "onClick": [Function],
                    "selected": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "primary": "Test Course 2",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(Icon)
                        className={
                          Object {
                            "margin": 5,
                          }
                        }
                        color="primary"
                      >
                        add_circle
                      </WithStyles(Icon)>,
                      "Assignment",
                    ],
                    "className": Object {
                      "marginBottom": "10px",
                      "marginLeft": "10px",
                    },
                    "color": "primary",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "add_circle",
                        "className": Object {
                          "margin": 5,
                        },
                        "color": "primary",
                      },
                      "ref": null,
                      "rendered": "add_circle",
                      "type": [Function],
                    },
                    "Assignment",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Sidebar matches its snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sidebar
    classes={
      Object {
        "drawer": Object {
          "flexShrink": 0,
          "width": 200,
        },
        "drawerPaper": Object {
          "width": 180,
        },
        "icon": Object {
          "margin": 5,
        },
        "nested": Object {
          "marginBottom": "10px",
          "marginLeft": "10px",
        },
        "toolbar": 10,
      }
    }
    user={
      Object {
        "person": Object {
          "teacher": Object {
            "courses": Array [
              Object {
                "name": "Test Course 1",
              },
              Object {
                "name": "Test Course 2",
              },
            ],
            "name": "Test Teacher",
          },
        },
        "role": "teacher",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <div
          className={10}
        />,
        <MenuList
          component="div"
        >
          <div>
            <WithStyles(MenuItem)
              onClick={[Function]}
              selected={true}
            >
              <WithStyles(ListItemText)
                primary="Test Course 1"
              />
            </WithStyles(MenuItem)>
            <WithStyles(Button)
              className={
                Object {
                  "marginBottom": "10px",
                  "marginLeft": "10px",
                }
              }
              color="primary"
              onClick={[Function]}
            >
              <WithStyles(Icon)
                className={
                  Object {
                    "margin": 5,
                  }
                }
                color="primary"
              >
                add_circle
              </WithStyles(Icon)>
              Assignment
            </WithStyles(Button)>
            <WithStyles(Divider) />
          </div>
          <div>
            <WithStyles(MenuItem)
              onClick={[Function]}
              selected={true}
            >
              <WithStyles(ListItemText)
                primary="Test Course 2"
              />
            </WithStyles(MenuItem)>
            <WithStyles(Button)
              className={
                Object {
                  "marginBottom": "10px",
                  "marginLeft": "10px",
                }
              }
              color="primary"
              onClick={[Function]}
            >
              <WithStyles(Icon)
                className={
                  Object {
                    "margin": 5,
                  }
                }
                color="primary"
              >
                add_circle
              </WithStyles(Icon)>
              Assignment
            </WithStyles(Button)>
            <WithStyles(Divider) />
          </div>
        </MenuList>,
      ],
      "className": Object {
        "flexShrink": 0,
        "width": 200,
      },
      "classes": Object {
        "paper": Object {
          "width": 180,
        },
      },
      "id": "sidebar",
      "position": "fixed",
      "variant": "permanent",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": 10,
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div>
              <WithStyles(MenuItem)
                onClick={[Function]}
                selected={true}
              >
                <WithStyles(ListItemText)
                  primary="Test Course 1"
                />
              </WithStyles(MenuItem)>
              <WithStyles(Button)
                className={
                  Object {
                    "marginBottom": "10px",
                    "marginLeft": "10px",
                  }
                }
                color="primary"
                onClick={[Function]}
              >
                <WithStyles(Icon)
                  className={
                    Object {
                      "margin": 5,
                    }
                  }
                  color="primary"
                >
                  add_circle
                </WithStyles(Icon)>
                Assignment
              </WithStyles(Button)>
              <WithStyles(Divider) />
            </div>,
            <div>
              <WithStyles(MenuItem)
                onClick={[Function]}
                selected={true}
              >
                <WithStyles(ListItemText)
                  primary="Test Course 2"
                />
              </WithStyles(MenuItem)>
              <WithStyles(Button)
                className={
                  Object {
                    "marginBottom": "10px",
                    "marginLeft": "10px",
                  }
                }
                color="primary"
                onClick={[Function]}
              >
                <WithStyles(Icon)
                  className={
                    Object {
                      "margin": 5,
                    }
                  }
                  color="primary"
                >
                  add_circle
                </WithStyles(Icon)>
                Assignment
              </WithStyles(Button)>
              <WithStyles(Divider) />
            </div>,
          ],
          "component": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <WithStyles(MenuItem)
                  onClick={[Function]}
                  selected={true}
                >
                  <WithStyles(ListItemText)
                    primary="Test Course 1"
                  />
                </WithStyles(MenuItem)>,
                <WithStyles(Button)
                  className={
                    Object {
                      "marginBottom": "10px",
                      "marginLeft": "10px",
                    }
                  }
                  color="primary"
                  onClick={[Function]}
                >
                  <WithStyles(Icon)
                    className={
                      Object {
                        "margin": 5,
                      }
                    }
                    color="primary"
                  >
                    add_circle
                  </WithStyles(Icon)>
                  Assignment
                </WithStyles(Button)>,
                <WithStyles(Divider) />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(ListItemText)
                    primary="Test Course 1"
                  />,
                  "onClick": [Function],
                  "selected": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "primary": "Test Course 1",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(Icon)
                      className={
                        Object {
                          "margin": 5,
                        }
                      }
                      color="primary"
                    >
                      add_circle
                    </WithStyles(Icon)>,
                    "Assignment",
                  ],
                  "className": Object {
                    "marginBottom": "10px",
                    "marginLeft": "10px",
                  },
                  "color": "primary",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "add_circle",
                      "className": Object {
                        "margin": 5,
                      },
                      "color": "primary",
                    },
                    "ref": null,
                    "rendered": "add_circle",
                    "type": [Function],
                  },
                  "Assignment",
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <WithStyles(MenuItem)
                  onClick={[Function]}
                  selected={true}
                >
                  <WithStyles(ListItemText)
                    primary="Test Course 2"
                  />
                </WithStyles(MenuItem)>,
                <WithStyles(Button)
                  className={
                    Object {
                      "marginBottom": "10px",
                      "marginLeft": "10px",
                    }
                  }
                  color="primary"
                  onClick={[Function]}
                >
                  <WithStyles(Icon)
                    className={
                      Object {
                        "margin": 5,
                      }
                    }
                    color="primary"
                  >
                    add_circle
                  </WithStyles(Icon)>
                  Assignment
                </WithStyles(Button)>,
                <WithStyles(Divider) />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(ListItemText)
                    primary="Test Course 2"
                  />,
                  "onClick": [Function],
                  "selected": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "primary": "Test Course 2",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(Icon)
                      className={
                        Object {
                          "margin": 5,
                        }
                      }
                      color="primary"
                    >
                      add_circle
                    </WithStyles(Icon)>,
                    "Assignment",
                  ],
                  "className": Object {
                    "marginBottom": "10px",
                    "marginLeft": "10px",
                  },
                  "color": "primary",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "add_circle",
                      "className": Object {
                        "margin": 5,
                      },
                      "color": "primary",
                    },
                    "ref": null,
                    "rendered": "add_circle",
                    "type": [Function],
                  },
                  "Assignment",
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            className={10}
          />,
          <MenuList
            component="div"
          >
            <div>
              <WithStyles(MenuItem)
                onClick={[Function]}
                selected={true}
              >
                <WithStyles(ListItemText)
                  primary="Test Course 1"
                />
              </WithStyles(MenuItem)>
              <WithStyles(Button)
                className={
                  Object {
                    "marginBottom": "10px",
                    "marginLeft": "10px",
                  }
                }
                color="primary"
                onClick={[Function]}
              >
                <WithStyles(Icon)
                  className={
                    Object {
                      "margin": 5,
                    }
                  }
                  color="primary"
                >
                  add_circle
                </WithStyles(Icon)>
                Assignment
              </WithStyles(Button)>
              <WithStyles(Divider) />
            </div>
            <div>
              <WithStyles(MenuItem)
                onClick={[Function]}
                selected={true}
              >
                <WithStyles(ListItemText)
                  primary="Test Course 2"
                />
              </WithStyles(MenuItem)>
              <WithStyles(Button)
                className={
                  Object {
                    "marginBottom": "10px",
                    "marginLeft": "10px",
                  }
                }
                color="primary"
                onClick={[Function]}
              >
                <WithStyles(Icon)
                  className={
                    Object {
                      "margin": 5,
                    }
                  }
                  color="primary"
                >
                  add_circle
                </WithStyles(Icon)>
                Assignment
              </WithStyles(Button)>
              <WithStyles(Divider) />
            </div>
          </MenuList>,
        ],
        "className": Object {
          "flexShrink": 0,
          "width": 200,
        },
        "classes": Object {
          "paper": Object {
            "width": 180,
          },
        },
        "id": "sidebar",
        "position": "fixed",
        "variant": "permanent",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": 10,
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <div>
                <WithStyles(MenuItem)
                  onClick={[Function]}
                  selected={true}
                >
                  <WithStyles(ListItemText)
                    primary="Test Course 1"
                  />
                </WithStyles(MenuItem)>
                <WithStyles(Button)
                  className={
                    Object {
                      "marginBottom": "10px",
                      "marginLeft": "10px",
                    }
                  }
                  color="primary"
                  onClick={[Function]}
                >
                  <WithStyles(Icon)
                    className={
                      Object {
                        "margin": 5,
                      }
                    }
                    color="primary"
                  >
                    add_circle
                  </WithStyles(Icon)>
                  Assignment
                </WithStyles(Button)>
                <WithStyles(Divider) />
              </div>,
              <div>
                <WithStyles(MenuItem)
                  onClick={[Function]}
                  selected={true}
                >
                  <WithStyles(ListItemText)
                    primary="Test Course 2"
                  />
                </WithStyles(MenuItem)>
                <WithStyles(Button)
                  className={
                    Object {
                      "marginBottom": "10px",
                      "marginLeft": "10px",
                    }
                  }
                  color="primary"
                  onClick={[Function]}
                >
                  <WithStyles(Icon)
                    className={
                      Object {
                        "margin": 5,
                      }
                    }
                    color="primary"
                  >
                    add_circle
                  </WithStyles(Icon)>
                  Assignment
                </WithStyles(Button)>
                <WithStyles(Divider) />
              </div>,
            ],
            "component": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <WithStyles(MenuItem)
                    onClick={[Function]}
                    selected={true}
                  >
                    <WithStyles(ListItemText)
                      primary="Test Course 1"
                    />
                  </WithStyles(MenuItem)>,
                  <WithStyles(Button)
                    className={
                      Object {
                        "marginBottom": "10px",
                        "marginLeft": "10px",
                      }
                    }
                    color="primary"
                    onClick={[Function]}
                  >
                    <WithStyles(Icon)
                      className={
                        Object {
                          "margin": 5,
                        }
                      }
                      color="primary"
                    >
                      add_circle
                    </WithStyles(Icon)>
                    Assignment
                  </WithStyles(Button)>,
                  <WithStyles(Divider) />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(ListItemText)
                      primary="Test Course 1"
                    />,
                    "onClick": [Function],
                    "selected": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "primary": "Test Course 1",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(Icon)
                        className={
                          Object {
                            "margin": 5,
                          }
                        }
                        color="primary"
                      >
                        add_circle
                      </WithStyles(Icon)>,
                      "Assignment",
                    ],
                    "className": Object {
                      "marginBottom": "10px",
                      "marginLeft": "10px",
                    },
                    "color": "primary",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "add_circle",
                        "className": Object {
                          "margin": 5,
                        },
                        "color": "primary",
                      },
                      "ref": null,
                      "rendered": "add_circle",
                      "type": [Function],
                    },
                    "Assignment",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <WithStyles(MenuItem)
                    onClick={[Function]}
                    selected={true}
                  >
                    <WithStyles(ListItemText)
                      primary="Test Course 2"
                    />
                  </WithStyles(MenuItem)>,
                  <WithStyles(Button)
                    className={
                      Object {
                        "marginBottom": "10px",
                        "marginLeft": "10px",
                      }
                    }
                    color="primary"
                    onClick={[Function]}
                  >
                    <WithStyles(Icon)
                      className={
                        Object {
                          "margin": 5,
                        }
                      }
                      color="primary"
                    >
                      add_circle
                    </WithStyles(Icon)>
                    Assignment
                  </WithStyles(Button)>,
                  <WithStyles(Divider) />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(ListItemText)
                      primary="Test Course 2"
                    />,
                    "onClick": [Function],
                    "selected": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "primary": "Test Course 2",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(Icon)
                        className={
                          Object {
                            "margin": 5,
                          }
                        }
                        color="primary"
                      >
                        add_circle
                      </WithStyles(Icon)>,
                      "Assignment",
                    ],
                    "className": Object {
                      "marginBottom": "10px",
                      "marginLeft": "10px",
                    },
                    "color": "primary",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "add_circle",
                        "className": Object {
                          "margin": 5,
                        },
                        "color": "primary",
                      },
                      "ref": null,
                      "rendered": "add_circle",
                      "type": [Function],
                    },
                    "Assignment",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
